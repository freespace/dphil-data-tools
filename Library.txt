function drawshadowedtext(text, x, y) {
  setColor(0, 0, 0);
  Overlay.drawString(text, x+1, y+1);
  setColor(255, 255, 255);
  Overlay.drawString(text, x, y);
  updateDisplay();
}

function filterFilesByExtension(files, ext) {
  accepted = newArray(files.length);
  adx = 0;
  for (idx = 0; idx < files.length; ++idx) {
    filename = files[idx];
    if (endsWith(filename, ext)) {
      accepted[adx] = filename;
      adx += 1;
    }
  }

  return Array.slice(accepted, 0, adx);
}

function savewithlut(dir, filename, lut, lutext, includefilename, addcolourbar, min, max, label) {
  if (indexOf(filename, "nd2") >= 0) {
    run("Bio-Formats Windowless Importer", "open="+dir+filename);
    ext="nd2";
  } else if (indexOf(filename, "tif") >=0 ) {
    open(filename);
    ext="tif";
  }

  namenoext = substring(filename, 0, indexOf(filename, "."+ext));

  fontsize=10;
  setFont("SansSerif", fontsize, "bold");

  if (min != 0 || max != 0) {
    print("--> Setting min = " + min);
    print("--> Setting max = " + max);
    setMinAndMax(min, max);
  }

  run("Calibrate...", "function=[Straight Line] unit=V text1=[0 65535] text2=[0 20]");

  run(lut);

  if (addcolourbar) {
    run("Calibration Bar...", "location=[Upper Right] fill=White label=Black number=5 decimal=0.0 font=8 zoom=0.8 overlay");
  }

  run("Scale Bar...", "width=500 height=4 font=8 color=White background=None location=[Lower Right] bold hide overlay");


  if (includefilename) {
    drawshadowedtext(namenoext, 1, fontsize+1);
  } else {
    drawshadowedtext(label, 1, fontsize+1);
  }

  wait(400);

  print("--> Saving with LUT="+lut);

  saveAs(lutext, dir  + namenoext+"-"+lut+"."+lutext);

  close();
}
